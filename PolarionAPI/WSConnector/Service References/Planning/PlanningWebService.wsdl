<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions xmlns:tns3="http://ws.polarion.com/TrackerWebService-types" xmlns:intf="http://ws.polarion.com/PlanningWebService" xmlns:apachesoap="http://xml.apache.org/xml-soap" xmlns:wsdlsoap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns4="http://ws.polarion.com/types" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns5="http://ws.polarion.com/ProjectWebService-types" xmlns:tns1="http://ws.polarion.com/PlanningWebService-impl" xmlns:tns2="http://ws.polarion.com/PlanningWebService-types" xmlns:impl="http://ws.polarion.com/PlanningWebService" targetNamespace="http://ws.polarion.com/PlanningWebService" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <wsdl:types>
    <xsd:schema xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://ws.polarion.com/PlanningWebService-impl">
      <xsd:import namespace="http://ws.polarion.com/types" />
      <xsd:import namespace="http://ws.polarion.com/PlanningWebService-types" />
      <xsd:import namespace="http://ws.polarion.com/ProjectWebService-types" />
      <xsd:import namespace="http://ws.polarion.com/TrackerWebService-types" />
      <xsd:element name="searchPlanTemplates">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="query" type="xsd:string" />
            <xsd:element name="sort" type="xsd:string" />
            <xsd:element name="resultsLimit" type="xsd:int" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="searchPlanTemplatesResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" name="searchPlanTemplatesReturn" type="tns2:Plan" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="createPlan">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="projectId" type="xsd:string" />
            <xsd:element name="name" type="xsd:string" />
            <xsd:element name="id" type="xsd:string" />
            <xsd:element name="parentId" type="xsd:string" />
            <xsd:element name="templateId" type="xsd:string" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="createPlanResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="createPlanReturn" type="tns4:SubterraURI" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="searchPlans">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="query" type="xsd:string" />
            <xsd:element name="sort" type="xsd:string" />
            <xsd:element name="resultsLimit" type="xsd:int" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="searchPlansResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" name="searchPlansReturn" type="tns2:Plan" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="createPlanTemplate">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="projectId" type="xsd:string" />
            <xsd:element name="name" type="xsd:string" />
            <xsd:element name="id" type="xsd:string" />
            <xsd:element name="templateId" type="xsd:string" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="createPlanTemplateResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="createPlanTemplateReturn" type="tns4:SubterraURI" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="searchPlansWithFields">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="query" type="xsd:string" />
            <xsd:element name="sort" type="xsd:string" />
            <xsd:element name="resultsLimit" type="xsd:int" />
            <xsd:element maxOccurs="unbounded" name="fields" type="xsd:string" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="searchPlansWithFieldsResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" name="searchPlansWithFieldsReturn" type="tns2:Plan" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="searchPlanTemplatesWithFields">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="query" type="xsd:string" />
            <xsd:element name="sort" type="xsd:string" />
            <xsd:element name="resultsLimit" type="xsd:int" />
            <xsd:element maxOccurs="unbounded" name="fields" type="xsd:string" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="searchPlanTemplatesWithFieldsResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element maxOccurs="unbounded" name="searchPlanTemplatesWithFieldsReturn" type="tns2:Plan" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getPlanWikiContent">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="uri" type="tns4:SubterraURI" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getPlanWikiContentResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="getPlanWikiContentReturn" type="tns4:Text" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="setPlanWikiContent">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="uri" type="tns4:SubterraURI" />
            <xsd:element name="text" type="tns4:Text" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="setPlanWikiContentResponse">
        <xsd:complexType />
      </xsd:element>
      <xsd:element name="wasPlanStarted">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="uri" type="tns4:SubterraURI" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="wasPlanStartedResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="wasPlanStartedReturn" type="xsd:boolean" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getPlanStatistics">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="uri" type="tns4:SubterraURI" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getPlanStatisticsResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="getPlanStatisticsReturn" type="tns2:PlanStatistics" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="removePlanItems">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="uri" type="tns4:SubterraURI" />
            <xsd:element maxOccurs="unbounded" name="items" type="tns4:SubterraURI" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="removePlanItemsResponse">
        <xsd:complexType />
      </xsd:element>
      <xsd:element name="addPlanItems">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="uri" type="tns4:SubterraURI" />
            <xsd:element maxOccurs="unbounded" name="items" type="tns4:SubterraURI" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="addPlanItemsResponse">
        <xsd:complexType />
      </xsd:element>
      <xsd:element name="deletePlans">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="projectId" type="xsd:string" />
            <xsd:element maxOccurs="unbounded" name="ids" type="xsd:string" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="deletePlansResponse">
        <xsd:complexType />
      </xsd:element>
      <xsd:element name="getPlanByUri">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="uri" type="tns4:SubterraURI" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getPlanByUriResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="getPlanByUriReturn" type="tns2:Plan" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getPlanById">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="projectId" type="xsd:string" />
            <xsd:element name="id" type="xsd:string" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="getPlanByIdResponse">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="getPlanByIdReturn" type="tns2:Plan" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="updatePlan">
        <xsd:complexType>
          <xsd:sequence>
            <xsd:element name="content" type="tns2:Plan" />
          </xsd:sequence>
        </xsd:complexType>
      </xsd:element>
      <xsd:element name="updatePlanResponse">
        <xsd:complexType />
      </xsd:element>
    </xsd:schema>
    <xsd:schema xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://ws.polarion.com/TrackerWebService-types">
      <xsd:import namespace="http://ws.polarion.com/types" />
      <xsd:import namespace="http://ws.polarion.com/PlanningWebService-types" />
      <xsd:import namespace="http://ws.polarion.com/ProjectWebService-types" />
      <xsd:complexType name="EnumOptionId">
        <xsd:sequence>
          <xsd:element name="id" nillable="true" type="xsd:string" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfEnumOptionId">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="EnumOptionId" type="tns3:EnumOptionId" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Approval">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="status" type="tns3:EnumOptionId" />
          <xsd:element minOccurs="0" maxOccurs="1" name="user" type="tns5:User" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfApproval">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Approval" type="tns3:Approval" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Attachment">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="author" type="tns5:User" />
          <xsd:element minOccurs="0" maxOccurs="1" name="fileName" type="xsd:string" />
          <xsd:element minOccurs="0" maxOccurs="1" name="id" type="xsd:string" />
          <xsd:element minOccurs="0" maxOccurs="1" name="length" type="xsd:long" />
          <xsd:element minOccurs="0" maxOccurs="1" name="title" type="xsd:string" />
          <xsd:element minOccurs="0" maxOccurs="1" name="updated" type="xsd:dateTime" />
          <xsd:element minOccurs="0" maxOccurs="1" name="url" type="xsd:string" />
        </xsd:sequence>
        <xsd:attribute name="uri" type="tns4:SubterraURI" />
        <xsd:attribute name="unresolvable" type="xsd:boolean" />
      </xsd:complexType>
      <xsd:complexType name="ArrayOfAttachment">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Attachment" type="tns3:Attachment" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Category">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="description" type="tns4:Text" />
          <xsd:element minOccurs="0" maxOccurs="1" name="id" type="xsd:string" />
          <xsd:element minOccurs="0" maxOccurs="1" name="name" type="xsd:string" />
        </xsd:sequence>
        <xsd:attribute name="uri" type="tns4:SubterraURI" />
        <xsd:attribute name="unresolvable" type="xsd:boolean" />
      </xsd:complexType>
      <xsd:complexType name="ArrayOfCategory">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Category" type="tns3:Category" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Comment">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="author" type="tns5:User" />
          <xsd:element minOccurs="0" maxOccurs="1" name="childCommentURIs" type="tns4:ArrayOfSubterraURI" />
          <xsd:element minOccurs="0" maxOccurs="1" name="created" type="xsd:dateTime" />
          <xsd:element minOccurs="0" maxOccurs="1" name="id" type="xsd:string" />
          <xsd:element minOccurs="0" maxOccurs="1" name="parentCommentURI" type="tns4:SubterraURI" />
          <xsd:element minOccurs="0" maxOccurs="1" name="resolved" type="xsd:boolean" />
          <xsd:element minOccurs="0" maxOccurs="1" name="tags" type="tns3:ArrayOfEnumOptionId" />
          <xsd:element minOccurs="0" maxOccurs="1" name="text" type="tns4:Text" />
          <xsd:element minOccurs="0" maxOccurs="1" name="title" type="xsd:string" />
          <xsd:element minOccurs="0" maxOccurs="1" name="visibleTo" type="tns4:ArrayOfstring" />
        </xsd:sequence>
        <xsd:attribute name="uri" type="tns4:SubterraURI" />
        <xsd:attribute name="unresolvable" type="xsd:boolean" />
      </xsd:complexType>
      <xsd:complexType name="ArrayOfComment">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Comment" type="tns3:Comment" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ExternallyLinkedWorkItem">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="role" type="tns3:EnumOptionId" />
          <xsd:element minOccurs="0" maxOccurs="1" name="workItemURI" type="xsd:string" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfExternallyLinkedWorkItem">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="ExternallyLinkedWorkItem" type="tns3:ExternallyLinkedWorkItem" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Hyperlink">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="role" type="tns3:EnumOptionId" />
          <xsd:element minOccurs="0" maxOccurs="1" name="uri" type="xsd:string" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfHyperlink">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Hyperlink" type="tns3:Hyperlink" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="LinkedWorkItem">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="revision" type="xsd:string" />
          <xsd:element minOccurs="0" maxOccurs="1" name="role" type="tns3:EnumOptionId" />
          <xsd:element minOccurs="0" maxOccurs="1" name="suspect" type="xsd:boolean" />
          <xsd:element minOccurs="0" maxOccurs="1" name="workItemURI" type="tns4:SubterraURI" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfLinkedWorkItem">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="LinkedWorkItem" type="tns3:LinkedWorkItem" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="PlanningConstraint">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="constraint" type="tns3:EnumOptionId" />
          <xsd:element minOccurs="0" maxOccurs="1" name="date" type="xsd:dateTime" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfPlanningConstraint">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="PlanningConstraint" type="tns3:PlanningConstraint" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="PriorityOptionId">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns3:EnumOptionId">
            <xsd:sequence />
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="TimePoint">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="closed" type="xsd:boolean" />
          <xsd:element minOccurs="0" maxOccurs="1" name="description" type="tns4:Text" />
          <xsd:element minOccurs="0" maxOccurs="1" name="earliestPlannedStart" type="xsd:date" />
          <xsd:element minOccurs="0" maxOccurs="1" name="id" type="xsd:string" />
          <xsd:element minOccurs="0" maxOccurs="1" name="name" type="xsd:string" />
          <xsd:element minOccurs="0" maxOccurs="1" name="time" type="xsd:date" />
        </xsd:sequence>
        <xsd:attribute name="uri" type="tns4:SubterraURI" />
        <xsd:attribute name="unresolvable" type="xsd:boolean" />
      </xsd:complexType>
      <xsd:complexType name="WorkRecord">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="comment" type="xsd:string" />
          <xsd:element minOccurs="0" maxOccurs="1" name="date" type="xsd:date" />
          <xsd:element minOccurs="0" maxOccurs="1" name="id" type="xsd:string" />
          <xsd:element minOccurs="0" maxOccurs="1" name="timeSpent" type="tns4:duration" />
          <xsd:element minOccurs="0" maxOccurs="1" name="type" type="tns3:EnumOptionId" />
          <xsd:element minOccurs="0" maxOccurs="1" name="user" type="tns5:User" />
        </xsd:sequence>
        <xsd:attribute name="uri" type="tns4:SubterraURI" />
        <xsd:attribute name="unresolvable" type="xsd:boolean" />
      </xsd:complexType>
      <xsd:complexType name="ArrayOfWorkRecord">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="WorkRecord" type="tns3:WorkRecord" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Custom">
        <xsd:sequence>
          <xsd:element name="key" type="xsd:string" />
          <xsd:element name="value" nillable="true" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfCustom">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Custom" type="tns3:Custom" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="WorkItem">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="approvals" type="tns3:ArrayOfApproval" />
          <xsd:element minOccurs="0" maxOccurs="1" name="assignee" type="tns5:ArrayOfUser" />
          <xsd:element minOccurs="0" maxOccurs="1" name="attachments" type="tns3:ArrayOfAttachment" />
          <xsd:element minOccurs="0" maxOccurs="1" name="author" type="tns5:User" />
          <xsd:element minOccurs="0" maxOccurs="1" name="autoSuspect" type="xsd:boolean" />
          <xsd:element minOccurs="0" maxOccurs="1" name="categories" type="tns3:ArrayOfCategory" />
          <xsd:element minOccurs="0" maxOccurs="1" name="comments" type="tns3:ArrayOfComment" />
          <xsd:element minOccurs="0" maxOccurs="1" name="created" type="xsd:dateTime" />
          <xsd:element minOccurs="0" maxOccurs="1" name="description" type="tns4:Text" />
          <xsd:element minOccurs="0" maxOccurs="1" name="dueDate" type="xsd:date" />
          <xsd:element minOccurs="0" maxOccurs="1" name="externallyLinkedWorkItems" type="tns3:ArrayOfExternallyLinkedWorkItem" />
          <xsd:element minOccurs="0" maxOccurs="1" name="hyperlinks" type="tns3:ArrayOfHyperlink" />
          <xsd:element minOccurs="0" maxOccurs="1" name="id" type="xsd:string" />
          <xsd:element minOccurs="0" maxOccurs="1" name="initialEstimate" type="tns4:duration" />
          <xsd:element minOccurs="0" maxOccurs="1" name="linkedRevisions" type="tns4:ArrayOfRevision" />
          <xsd:element minOccurs="0" maxOccurs="1" name="linkedRevisionsDerived" type="tns4:ArrayOfRevision" />
          <xsd:element minOccurs="0" maxOccurs="1" name="linkedWorkItems" type="tns3:ArrayOfLinkedWorkItem" />
          <xsd:element minOccurs="0" maxOccurs="1" name="linkedWorkItemsDerived" type="tns3:ArrayOfLinkedWorkItem" />
          <xsd:element minOccurs="0" maxOccurs="1" name="location" type="tns4:Location" />
          <xsd:element minOccurs="0" maxOccurs="1" name="moduleURI" type="tns4:SubterraURI" />
          <xsd:element minOccurs="0" maxOccurs="1" name="outlineNumber" type="xsd:string" />
          <xsd:element minOccurs="0" maxOccurs="1" name="plannedEnd" type="xsd:dateTime" />
          <xsd:element minOccurs="0" maxOccurs="1" name="plannedIn" type="tns2:ArrayOfPlan" />
          <xsd:element minOccurs="0" maxOccurs="1" name="plannedStart" type="xsd:dateTime" />
          <xsd:element minOccurs="0" maxOccurs="1" name="planningConstraints" type="tns3:ArrayOfPlanningConstraint" />
          <xsd:element minOccurs="0" maxOccurs="1" name="previousStatus" type="tns3:EnumOptionId" />
          <xsd:element minOccurs="0" maxOccurs="1" name="priority" type="tns3:PriorityOptionId" />
          <xsd:element minOccurs="0" maxOccurs="1" name="project" type="tns5:Project" />
          <xsd:element minOccurs="0" maxOccurs="1" name="remainingEstimate" type="tns4:duration" />
          <xsd:element minOccurs="0" maxOccurs="1" name="resolution" type="tns3:EnumOptionId" />
          <xsd:element minOccurs="0" maxOccurs="1" name="resolvedOn" type="xsd:dateTime" />
          <xsd:element minOccurs="0" maxOccurs="1" name="severity" type="tns3:EnumOptionId" />
          <xsd:element minOccurs="0" maxOccurs="1" name="status" type="tns3:EnumOptionId" />
          <xsd:element minOccurs="0" maxOccurs="1" name="timePoint" type="tns3:TimePoint" />
          <xsd:element minOccurs="0" maxOccurs="1" name="timeSpent" type="tns4:duration" />
          <xsd:element minOccurs="0" maxOccurs="1" name="title" type="xsd:string" />
          <xsd:element minOccurs="0" maxOccurs="1" name="type" type="tns3:EnumOptionId" />
          <xsd:element minOccurs="0" maxOccurs="1" name="updated" type="xsd:dateTime" />
          <xsd:element minOccurs="0" maxOccurs="1" name="workRecords" type="tns3:ArrayOfWorkRecord" />
          <xsd:element minOccurs="0" maxOccurs="1" name="customFields" type="tns3:ArrayOfCustom" />
        </xsd:sequence>
        <xsd:attribute name="uri" type="tns4:SubterraURI" />
        <xsd:attribute name="unresolvable" type="xsd:boolean" />
      </xsd:complexType>
      <xsd:complexType name="ArrayOfPriorityOptionId">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="PriorityOptionId" type="tns3:PriorityOptionId" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="EnumOption">
        <xsd:sequence>
          <xsd:element name="default" type="xsd:boolean" />
          <xsd:element name="enumId" nillable="true" type="xsd:string" />
          <xsd:element name="hidden" type="xsd:boolean" />
          <xsd:element name="id" nillable="true" type="xsd:string" />
          <xsd:element name="name" nillable="true" type="xsd:string" />
          <xsd:element name="phantom" type="xsd:boolean" />
          <xsd:element name="properties" nillable="true" type="tns4:Properties" />
          <xsd:element name="sequenceNumber" type="xsd:int" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="PriorityOpt">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns3:EnumOption">
            <xsd:sequence>
              <xsd:element name="float" type="xsd:float" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
      <xsd:complexType name="CustomFieldType">
        <xsd:sequence>
          <xsd:element name="defaultValue" nillable="true" type="xsd:anyType" />
          <xsd:element name="dependsOn" nillable="true" type="xsd:string" />
          <xsd:element name="description" nillable="true" type="xsd:string" />
          <xsd:element name="id" nillable="true" type="xsd:string" />
          <xsd:element name="name" nillable="true" type="xsd:string" />
          <xsd:element name="required" type="xsd:boolean" />
          <xsd:element name="type" nillable="true" type="xsd:QName" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="EnumCustomFieldType">
        <xsd:complexContent mixed="false">
          <xsd:extension base="tns3:CustomFieldType">
            <xsd:sequence>
              <xsd:element name="enumId" nillable="true" type="xsd:string" />
            </xsd:sequence>
          </xsd:extension>
        </xsd:complexContent>
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://ws.polarion.com/types">
      <xsd:import namespace="http://ws.polarion.com/PlanningWebService-types" />
      <xsd:import namespace="http://ws.polarion.com/ProjectWebService-types" />
      <xsd:import namespace="http://ws.polarion.com/TrackerWebService-types" />
      <xsd:simpleType name="SubterraURI">
        <xsd:restriction base="xsd:string" />
      </xsd:simpleType>
      <xsd:complexType name="Text">
        <xsd:sequence>
          <xsd:element name="type" type="xsd:string" />
          <xsd:element name="content" type="xsd:string" />
          <xsd:element name="contentLossy" type="xsd:boolean" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="Location">
        <xsd:restriction base="xsd:string" />
      </xsd:simpleType>
      <xsd:simpleType name="duration">
        <xsd:restriction base="xsd:string" />
      </xsd:simpleType>
      <xsd:complexType name="ArrayOfSubterraURI">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="SubterraURI" type="tns4:SubterraURI" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfstring">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="string" type="xsd:string" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Revision">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="author" type="xsd:string" />
          <xsd:element minOccurs="0" maxOccurs="1" name="created" type="xsd:dateTime" />
          <xsd:element minOccurs="0" maxOccurs="1" name="internalCommit" type="xsd:boolean" />
          <xsd:element minOccurs="0" maxOccurs="1" name="linkedWorkItemURIs" type="tns4:ArrayOfSubterraURI" />
          <xsd:element minOccurs="0" maxOccurs="1" name="message" type="xsd:string" />
          <xsd:element minOccurs="0" maxOccurs="1" name="name" type="xsd:string" />
          <xsd:element minOccurs="0" maxOccurs="1" name="repositoryName" type="xsd:string" />
        </xsd:sequence>
        <xsd:attribute name="uri" type="tns4:SubterraURI" />
        <xsd:attribute name="unresolvable" type="xsd:boolean" />
      </xsd:complexType>
      <xsd:complexType name="ArrayOfRevision">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Revision" type="tns4:Revision" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="property">
        <xsd:sequence>
          <xsd:element name="key" type="xsd:string" />
          <xsd:element name="value" nillable="true" type="xsd:string" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Properties">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="property" type="tns4:property" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:simpleType name="Currency">
        <xsd:restriction base="xsd:decimal">
          <xsd:fractionDigits value="2" />
        </xsd:restriction>
      </xsd:simpleType>
    </xsd:schema>
    <xsd:schema xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://ws.polarion.com/ProjectWebService-types">
      <xsd:import namespace="http://ws.polarion.com/types" />
      <xsd:import namespace="http://ws.polarion.com/PlanningWebService-types" />
      <xsd:import namespace="http://ws.polarion.com/TrackerWebService-types" />
      <xsd:complexType name="User">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="description" type="tns4:Text" />
          <xsd:element minOccurs="0" maxOccurs="1" name="disabledNotifications" type="xsd:boolean" />
          <xsd:element minOccurs="0" maxOccurs="1" name="email" type="xsd:string" />
          <xsd:element minOccurs="0" maxOccurs="1" name="id" type="xsd:string" />
          <xsd:element minOccurs="0" maxOccurs="1" name="name" type="xsd:string" />
          <xsd:element minOccurs="0" maxOccurs="1" name="voteURIs" type="tns4:ArrayOfSubterraURI" />
          <xsd:element minOccurs="0" maxOccurs="1" name="watcheURIs" type="tns4:ArrayOfSubterraURI" />
        </xsd:sequence>
        <xsd:attribute name="uri" type="tns4:SubterraURI" />
        <xsd:attribute name="unresolvable" type="xsd:boolean" />
      </xsd:complexType>
      <xsd:complexType name="ArrayOfUser">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="User" type="tns5:User" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Project">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="active" type="xsd:boolean" />
          <xsd:element minOccurs="0" maxOccurs="1" name="description" type="tns4:Text" />
          <xsd:element minOccurs="0" maxOccurs="1" name="finish" type="xsd:date" />
          <xsd:element minOccurs="0" maxOccurs="1" name="id" type="xsd:string" />
          <xsd:element minOccurs="0" maxOccurs="1" name="lead" type="tns5:User" />
          <xsd:element minOccurs="0" maxOccurs="1" name="location" type="tns4:Location" />
          <xsd:element minOccurs="0" maxOccurs="1" name="lockWorkRecordsDate" type="xsd:date" />
          <xsd:element minOccurs="0" maxOccurs="1" name="name" type="xsd:string" />
          <xsd:element minOccurs="0" maxOccurs="1" name="projectGroupURI" type="tns4:SubterraURI" />
          <xsd:element minOccurs="0" maxOccurs="1" name="start" type="xsd:date" />
          <xsd:element minOccurs="0" maxOccurs="1" name="trackerPrefix" type="xsd:string" />
        </xsd:sequence>
        <xsd:attribute name="uri" type="tns4:SubterraURI" />
        <xsd:attribute name="unresolvable" type="xsd:boolean" />
      </xsd:complexType>
    </xsd:schema>
    <xsd:schema xmlns="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://ws.polarion.com/PlanningWebService-types">
      <xsd:import namespace="http://ws.polarion.com/types" />
      <xsd:import namespace="http://ws.polarion.com/ProjectWebService-types" />
      <xsd:import namespace="http://ws.polarion.com/TrackerWebService-types" />
      <xsd:complexType name="ArrayOfPlan">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="Plan" type="tns2:Plan" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="PlanRecord">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="item" type="tns3:WorkItem" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="ArrayOfPlanRecord">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="unbounded" name="PlanRecord" type="tns2:PlanRecord" />
        </xsd:sequence>
      </xsd:complexType>
      <xsd:complexType name="Plan">
        <xsd:sequence>
          <xsd:element minOccurs="0" maxOccurs="1" name="allowedTypes" type="tns3:ArrayOfEnumOptionId" />
          <xsd:element minOccurs="0" maxOccurs="1" name="authorURI" type="tns4:SubterraURI" />
          <xsd:element minOccurs="0" maxOccurs="1" name="calculationType" type="tns3:EnumOptionId" />
          <xsd:element minOccurs="0" maxOccurs="1" name="capacity" type="xsd:float" />
          <xsd:element minOccurs="0" maxOccurs="1" name="color" type="xsd:string" />
          <xsd:element minOccurs="0" maxOccurs="1" name="created" type="xsd:dateTime" />
          <xsd:element minOccurs="0" maxOccurs="1" name="defaultEstimate" type="xsd:float" />
          <xsd:element minOccurs="0" maxOccurs="1" name="description" type="tns4:Text" />
          <xsd:element minOccurs="0" maxOccurs="1" name="dueDate" type="xsd:date" />
          <xsd:element minOccurs="0" maxOccurs="1" name="estimationField" type="xsd:string" />
          <xsd:element minOccurs="0" maxOccurs="1" name="finishedOn" type="xsd:dateTime" />
          <xsd:element minOccurs="0" maxOccurs="1" name="id" type="xsd:string" />
          <xsd:element minOccurs="0" maxOccurs="1" name="isTemplate" type="xsd:boolean" />
          <xsd:element minOccurs="0" maxOccurs="1" name="location" type="tns4:Location" />
          <xsd:element minOccurs="0" maxOccurs="1" name="name" type="xsd:string" />
          <xsd:element minOccurs="0" maxOccurs="1" name="parent" type="tns2:Plan" />
          <xsd:element minOccurs="0" maxOccurs="1" name="previousTimeSpent" type="tns4:duration" />
          <xsd:element minOccurs="0" maxOccurs="1" name="prioritizationField" type="xsd:string" />
          <xsd:element minOccurs="0" maxOccurs="1" name="projectURI" type="tns4:SubterraURI" />
          <xsd:element minOccurs="0" maxOccurs="1" name="records" type="tns2:ArrayOfPlanRecord" />
          <xsd:element minOccurs="0" maxOccurs="1" name="sortOrder" type="xsd:int" />
          <xsd:element minOccurs="0" maxOccurs="1" name="startDate" type="xsd:date" />
          <xsd:element minOccurs="0" maxOccurs="1" name="startedOn" type="xsd:dateTime" />
          <xsd:element minOccurs="0" maxOccurs="1" name="status" type="tns3:EnumOptionId" />
          <xsd:element minOccurs="0" maxOccurs="1" name="templateURI" type="tns4:SubterraURI" />
          <xsd:element minOccurs="0" maxOccurs="1" name="updated" type="xsd:dateTime" />
          <xsd:element minOccurs="0" maxOccurs="1" name="customFields" type="tns3:ArrayOfCustom" />
        </xsd:sequence>
        <xsd:attribute name="uri" type="tns4:SubterraURI" />
        <xsd:attribute name="unresolvable" type="xsd:boolean" />
      </xsd:complexType>
      <xsd:complexType name="PlanStatistics">
        <xsd:sequence>
          <xsd:element name="done" type="xsd:float" />
          <xsd:element name="todo" type="xsd:float" />
          <xsd:element name="numberOfResolved" nillable="true" type="xsd:int" />
          <xsd:element name="numberOfUnresolved" nillable="true" type="xsd:int" />
          <xsd:element name="numberOfPlanned" nillable="true" type="xsd:int" />
          <xsd:element name="planned" type="xsd:float" />
          <xsd:element name="progress" type="xsd:float" />
          <xsd:element name="idealProgress" type="xsd:float" />
          <xsd:element name="doneAsString" type="xsd:string" />
          <xsd:element name="todoAsString" type="xsd:string" />
          <xsd:element name="plannedAsString" type="xsd:string" />
          <xsd:element name="idealProgressAsString" type="xsd:string" />
          <xsd:element name="progressAsString" type="xsd:string" />
        </xsd:sequence>
      </xsd:complexType>
    </xsd:schema>
  </wsdl:types>
  <wsdl:message name="getPlanWikiContentResponse">
    <wsdl:part name="parameters" element="tns1:getPlanWikiContentResponse" />
  </wsdl:message>
  <wsdl:message name="searchPlansWithFieldsResponse">
    <wsdl:part name="parameters" element="tns1:searchPlansWithFieldsResponse" />
  </wsdl:message>
  <wsdl:message name="getPlanStatisticsRequest">
    <wsdl:part name="parameters" element="tns1:getPlanStatistics" />
  </wsdl:message>
  <wsdl:message name="createPlanResponse">
    <wsdl:part name="parameters" element="tns1:createPlanResponse" />
  </wsdl:message>
  <wsdl:message name="searchPlanTemplatesResponse">
    <wsdl:part name="parameters" element="tns1:searchPlanTemplatesResponse" />
  </wsdl:message>
  <wsdl:message name="getPlanWikiContentRequest">
    <wsdl:part name="parameters" element="tns1:getPlanWikiContent" />
  </wsdl:message>
  <wsdl:message name="removePlanItemsRequest">
    <wsdl:part name="parameters" element="tns1:removePlanItems" />
  </wsdl:message>
  <wsdl:message name="searchPlanTemplatesWithFieldsRequest">
    <wsdl:part name="parameters" element="tns1:searchPlanTemplatesWithFields" />
  </wsdl:message>
  <wsdl:message name="createPlanTemplateResponse">
    <wsdl:part name="parameters" element="tns1:createPlanTemplateResponse" />
  </wsdl:message>
  <wsdl:message name="searchPlansResponse">
    <wsdl:part name="parameters" element="tns1:searchPlansResponse" />
  </wsdl:message>
  <wsdl:message name="searchPlansWithFieldsRequest">
    <wsdl:part name="parameters" element="tns1:searchPlansWithFields" />
  </wsdl:message>
  <wsdl:message name="setPlanWikiContentRequest">
    <wsdl:part name="parameters" element="tns1:setPlanWikiContent" />
  </wsdl:message>
  <wsdl:message name="setPlanWikiContentResponse">
    <wsdl:part name="parameters" element="tns1:setPlanWikiContentResponse" />
  </wsdl:message>
  <wsdl:message name="createPlanRequest">
    <wsdl:part name="parameters" element="tns1:createPlan" />
  </wsdl:message>
  <wsdl:message name="addPlanItemsRequest">
    <wsdl:part name="parameters" element="tns1:addPlanItems" />
  </wsdl:message>
  <wsdl:message name="searchPlanTemplatesWithFieldsResponse">
    <wsdl:part name="parameters" element="tns1:searchPlanTemplatesWithFieldsResponse" />
  </wsdl:message>
  <wsdl:message name="wasPlanStartedRequest">
    <wsdl:part name="parameters" element="tns1:wasPlanStarted" />
  </wsdl:message>
  <wsdl:message name="deletePlansRequest">
    <wsdl:part name="parameters" element="tns1:deletePlans" />
  </wsdl:message>
  <wsdl:message name="searchPlanTemplatesRequest">
    <wsdl:part name="parameters" element="tns1:searchPlanTemplates" />
  </wsdl:message>
  <wsdl:message name="getPlanStatisticsResponse">
    <wsdl:part name="parameters" element="tns1:getPlanStatisticsResponse" />
  </wsdl:message>
  <wsdl:message name="createPlanTemplateRequest">
    <wsdl:part name="parameters" element="tns1:createPlanTemplate" />
  </wsdl:message>
  <wsdl:message name="addPlanItemsResponse">
    <wsdl:part name="parameters" element="tns1:addPlanItemsResponse" />
  </wsdl:message>
  <wsdl:message name="getPlanByIdResponse">
    <wsdl:part name="parameters" element="tns1:getPlanByIdResponse" />
  </wsdl:message>
  <wsdl:message name="getPlanByUriResponse">
    <wsdl:part name="parameters" element="tns1:getPlanByUriResponse" />
  </wsdl:message>
  <wsdl:message name="searchPlansRequest">
    <wsdl:part name="parameters" element="tns1:searchPlans" />
  </wsdl:message>
  <wsdl:message name="updatePlanRequest">
    <wsdl:part name="parameters" element="tns1:updatePlan" />
  </wsdl:message>
  <wsdl:message name="getPlanByUriRequest">
    <wsdl:part name="parameters" element="tns1:getPlanByUri" />
  </wsdl:message>
  <wsdl:message name="updatePlanResponse">
    <wsdl:part name="parameters" element="tns1:updatePlanResponse" />
  </wsdl:message>
  <wsdl:message name="deletePlansResponse">
    <wsdl:part name="parameters" element="tns1:deletePlansResponse" />
  </wsdl:message>
  <wsdl:message name="wasPlanStartedResponse">
    <wsdl:part name="parameters" element="tns1:wasPlanStartedResponse" />
  </wsdl:message>
  <wsdl:message name="removePlanItemsResponse">
    <wsdl:part name="parameters" element="tns1:removePlanItemsResponse" />
  </wsdl:message>
  <wsdl:message name="getPlanByIdRequest">
    <wsdl:part name="parameters" element="tns1:getPlanById" />
  </wsdl:message>
  <wsdl:portType name="PlanningWebService">
    <wsdl:operation name="searchPlanTemplates">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
Search plan templates.
@param query the query used to find plan templates (can be null)
@param sort the field used to sort the result (can be null)
@param resultsLimit the maximum number of records to be returned, -1 for no limit.
@return the found plan templates.
@since 3.8.0   </wsdl:documentation>
      <wsdl:input name="searchPlanTemplatesRequest" message="impl:searchPlanTemplatesRequest" />
      <wsdl:output name="searchPlanTemplatesResponse" message="impl:searchPlanTemplatesResponse" />
    </wsdl:operation>
    <wsdl:operation name="createPlan">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
Creates a new plan
@param projectId The project the plan will be created in 
@param name The name of the plan
@param id The id of the plan
@param parentId The id of the parent plan (can be null)
@param templateId The id of the template used for this plan
@return URI of the created plan.
@since 3.8.0   </wsdl:documentation>
      <wsdl:input name="createPlanRequest" message="impl:createPlanRequest" />
      <wsdl:output name="createPlanResponse" message="impl:createPlanResponse" />
    </wsdl:operation>
    <wsdl:operation name="searchPlans">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
Search plans.
@param query the query used to find plans (can be null)
@param sort the field used to sort the result (can be null)
@param resultsLimit the maximum number of records to be returned, -1 for no limit.
@return the found plans.
@since 3.8.0   </wsdl:documentation>
      <wsdl:input name="searchPlansRequest" message="impl:searchPlansRequest" />
      <wsdl:output name="searchPlansResponse" message="impl:searchPlansResponse" />
    </wsdl:operation>
    <wsdl:operation name="createPlanTemplate">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
Creates a new plan template
@param projectId The project the plan template will be created in 
@param name The name of the plan
@param id The id of the plan
@param templateId The id of the template used for this template (can be null)
@return URI of the created plan.
@since 3.8.0   </wsdl:documentation>
      <wsdl:input name="createPlanTemplateRequest" message="impl:createPlanTemplateRequest" />
      <wsdl:output name="createPlanTemplateResponse" message="impl:createPlanTemplateResponse" />
    </wsdl:operation>
    <wsdl:operation name="searchPlansWithFields">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
Search plans with only fields specified filled with values. All other fields are not transmitted.
@param query the query used to find plans (can be null)
@param sort the field used to sort the result (can be null)
@param resultsLimit the maximum number of records to be returned, -1 for no limit.
@param fields plan fields that should be initialized, all other fields will be {@code null}.
@return the found plans with filled specified fields.
@since 3.8.0   </wsdl:documentation>
      <wsdl:input name="searchPlansWithFieldsRequest" message="impl:searchPlansWithFieldsRequest" />
      <wsdl:output name="searchPlansWithFieldsResponse" message="impl:searchPlansWithFieldsResponse" />
    </wsdl:operation>
    <wsdl:operation name="searchPlanTemplatesWithFields">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
Search plan templates with only fields specified filled with values. All other fields are not transmitted.
@param query the query used to find plan templates (can be null)
@param sort the field used to sort the result (can be null)
@param resultsLimit the maximum number of records to be returned, -1 for no limit.
@param fields plan template fields that should be initialized, all other fields will be {@code null}.
@return the found plan templates with filled specified fields.
@since 3.8.0   </wsdl:documentation>
      <wsdl:input name="searchPlanTemplatesWithFieldsRequest" message="impl:searchPlanTemplatesWithFieldsRequest" />
      <wsdl:output name="searchPlanTemplatesWithFieldsResponse" message="impl:searchPlanTemplatesWithFieldsResponse" />
    </wsdl:operation>
    <wsdl:operation name="getPlanWikiContent">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
Returns the wiki content of plan with given uri
@param uri the SubterraURI of the plan
@return the wikipage content of the plan with given id
@since 3.8.0   </wsdl:documentation>
      <wsdl:input name="getPlanWikiContentRequest" message="impl:getPlanWikiContentRequest" />
      <wsdl:output name="getPlanWikiContentResponse" message="impl:getPlanWikiContentResponse" />
    </wsdl:operation>
    <wsdl:operation name="setPlanWikiContent">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
Sets the wiki content of plan with given uri
@param uri the SubterraURI of the plan
@param text the new content for plans wikipage
@since 3.8.0   </wsdl:documentation>
      <wsdl:input name="setPlanWikiContentRequest" message="impl:setPlanWikiContentRequest" />
      <wsdl:output name="setPlanWikiContentResponse" message="impl:setPlanWikiContentResponse" />
    </wsdl:operation>
    <wsdl:operation name="wasPlanStarted">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
 Checks if the plan was started
@param uri the SubterraURI of the plan
@return true if plan exists and is started, false otherwise 	
@since 3.8.0
	   </wsdl:documentation>
      <wsdl:input name="wasPlanStartedRequest" message="impl:wasPlanStartedRequest" />
      <wsdl:output name="wasPlanStartedResponse" message="impl:wasPlanStartedResponse" />
    </wsdl:operation>
    <wsdl:operation name="getPlanStatistics">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
 Get statistics of the plan
@param uri the SubterraURI of the plan to get the statistics from
@return the statistics of plan with given SubterraURI 	
@since 3.8.0
	   </wsdl:documentation>
      <wsdl:input name="getPlanStatisticsRequest" message="impl:getPlanStatisticsRequest" />
      <wsdl:output name="getPlanStatisticsResponse" message="impl:getPlanStatisticsResponse" />
    </wsdl:operation>
    <wsdl:operation name="removePlanItems">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
 Remove plan records to the plan
@param uri the SubterraURI of the plan to delete the items from
@param items an array containing the uris of all the work items to be removed
@since 3.8.0	
	   </wsdl:documentation>
      <wsdl:input name="removePlanItemsRequest" message="impl:removePlanItemsRequest" />
      <wsdl:output name="removePlanItemsResponse" message="impl:removePlanItemsResponse" />
    </wsdl:operation>
    <wsdl:operation name="addPlanItems">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
 Adds plan records to the plan
@param uri the SubterraURI of the plan to add the items to
@param items an array containing the uris of all the work items to be added	
@since 3.8.0
	   </wsdl:documentation>
      <wsdl:input name="addPlanItemsRequest" message="impl:addPlanItemsRequest" />
      <wsdl:output name="addPlanItemsResponse" message="impl:addPlanItemsResponse" />
    </wsdl:operation>
    <wsdl:operation name="deletePlans">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
Delete plans
@param projectId the project the plans will be deleted in
@param ids the array of ids to be deleted
@since 3.8.0   </wsdl:documentation>
      <wsdl:input name="deletePlansRequest" message="impl:deletePlansRequest" />
      <wsdl:output name="deletePlansResponse" message="impl:deletePlansResponse" />
    </wsdl:operation>
    <wsdl:operation name="getPlanByUri">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
Returns a specific plan
@param uri the SubterraURI of the plan to load
@return the plan
@since 3.8.0   </wsdl:documentation>
      <wsdl:input name="getPlanByUriRequest" message="impl:getPlanByUriRequest" />
      <wsdl:output name="getPlanByUriResponse" message="impl:getPlanByUriResponse" />
    </wsdl:operation>
    <wsdl:operation name="getPlanById">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
Returns a specific plan
@param projectId ID of the project that contains the specific plan
@param id ID of the plan
@return the plan
@since 3.8.0   </wsdl:documentation>
      <wsdl:input name="getPlanByIdRequest" message="impl:getPlanByIdRequest" />
      <wsdl:output name="getPlanByIdResponse" message="impl:getPlanByIdResponse" />
    </wsdl:operation>
    <wsdl:operation name="updatePlan">
      <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
Updates a plan.
@param content a plan object containing the updates, the content must contain the uri of the plan to be update
or else the update will fail
@since 3.8.0   </wsdl:documentation>
      <wsdl:input name="updatePlanRequest" message="impl:updatePlanRequest" />
      <wsdl:output name="updatePlanResponse" message="impl:updatePlanResponse" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="PlanningWebServiceSoapBinding" type="impl:PlanningWebService">
    <wsdlsoap:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="searchPlanTemplates">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="searchPlanTemplatesRequest">
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="searchPlanTemplatesResponse">
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="createPlan">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="createPlanRequest">
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="createPlanResponse">
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="searchPlans">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="searchPlansRequest">
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="searchPlansResponse">
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="createPlanTemplate">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="createPlanTemplateRequest">
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="createPlanTemplateResponse">
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="searchPlansWithFields">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="searchPlansWithFieldsRequest">
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="searchPlansWithFieldsResponse">
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="searchPlanTemplatesWithFields">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="searchPlanTemplatesWithFieldsRequest">
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="searchPlanTemplatesWithFieldsResponse">
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPlanWikiContent">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="getPlanWikiContentRequest">
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="getPlanWikiContentResponse">
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="setPlanWikiContent">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="setPlanWikiContentRequest">
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="setPlanWikiContentResponse">
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="wasPlanStarted">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="wasPlanStartedRequest">
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="wasPlanStartedResponse">
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPlanStatistics">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="getPlanStatisticsRequest">
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="getPlanStatisticsResponse">
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="removePlanItems">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="removePlanItemsRequest">
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="removePlanItemsResponse">
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="addPlanItems">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="addPlanItemsRequest">
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="addPlanItemsResponse">
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="deletePlans">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="deletePlansRequest">
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="deletePlansResponse">
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPlanByUri">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="getPlanByUriRequest">
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="getPlanByUriResponse">
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getPlanById">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="getPlanByIdRequest">
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="getPlanByIdResponse">
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="updatePlan">
      <wsdlsoap:operation soapAction="" />
      <wsdl:input name="updatePlanRequest">
        <wsdlsoap:body use="literal" />
      </wsdl:input>
      <wsdl:output name="updatePlanResponse">
        <wsdlsoap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="PlanningWebServiceService">
    <wsdl:documentation xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">

      This service provides access to Polarion's Plan feature
		  </wsdl:documentation>
    <wsdl:port name="PlanningWebService" binding="impl:PlanningWebServiceSoapBinding">
      <wsdlsoap:address location="http://localhost:84/polarion/ws/services/PlanningWebService" />
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>